[0.000000] (-) TimerEvent: {}
[0.000527] (-) JobUnselected: {'identifier': 'base_interfaces_demo'}
[0.000671] (-) JobUnselected: {'identifier': 'cpp01_topic'}
[0.001124] (-) JobUnselected: {'identifier': 'cpp02_service'}
[0.001161] (-) JobUnselected: {'identifier': 'cpp03_action'}
[0.001490] (-) JobUnselected: {'identifier': 'cpp04_param'}
[0.001520] (-) JobUnselected: {'identifier': 'cpp05_names'}
[0.001743] (-) JobUnselected: {'identifier': 'cpp06_time'}
[0.001772] (-) JobUnselected: {'identifier': 'myfirst_matepkg'}
[0.001797] (cpp07_exercise01) JobQueued: {'identifier': 'cpp07_exercise01', 'dependencies': OrderedDict([('base_interfaces_demo', '/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo')])}
[0.001937] (cpp07_exercise01) JobStarted: {'identifier': 'cpp07_exercise01'}
[0.011825] (cpp07_exercise01) JobProgress: {'identifier': 'cpp07_exercise01', 'progress': 'cmake'}
[0.012457] (cpp07_exercise01) JobProgress: {'identifier': 'cpp07_exercise01', 'progress': 'build'}
[0.013116] (cpp07_exercise01) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/pz10on/Work/ws01_plumbing/build/cpp07_exercise01', '--', '-j12', '-l12'], 'cwd': '/home/pz10on/Work/ws01_plumbing/build/cpp07_exercise01', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'pz10on'), ('LC_TIME', 'zh_CN.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/pz10on'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('TERM_PROGRAM_VERSION', '1.73.1'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('MANAGERPID', '1718'), ('SYSTEMD_EXEC_PID', '2128'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '13368'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/pz10on/Work/ws01_plumbing/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'fcitx'), ('LOGNAME', 'pz10on'), ('JOURNAL_STREAM', '8:35235'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'pz10on'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/pz10on-laptop:@/tmp/.ICE-unix/2109,unix/pz10on-laptop:/tmp/.ICE-unix/2109'), ('INVOCATION_ID', '4d841e4e943c4fb79d9d2f295c62cb65'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=fcitx'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-bac2f423d9.sock'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/pz10on/Work/ws01_plumbing/install/myfirst_matepkg:/home/pz10on/Work/ws01_plumbing/install/cpp07_exercise01:/home/pz10on/Work/ws01_plumbing/install/cpp06_time:/home/pz10on/Work/ws01_plumbing/install/cpp05_names:/home/pz10on/Work/ws01_plumbing/install/cpp04_param:/home/pz10on/Work/ws01_plumbing/install/cpp03_action:/home/pz10on/Work/ws01_plumbing/install/cpp02_service:/home/pz10on/Work/ws01_plumbing/install/cpp01_topic:/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo:/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('QT_IM_MODULE', 'fcitx'), ('PWD', '/home/pz10on/Work/ws01_plumbing/build/cpp07_exercise01'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CLUTTER_IM_MODULE', 'fcitx'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo:/home/pz10on/Work/ws01_plumbing/install/myfirst_matepkg:/home/pz10on/Work/ws01_plumbing/install/cpp07_exercise01:/home/pz10on/Work/ws01_plumbing/install/cpp06_time:/home/pz10on/Work/ws01_plumbing/install/cpp05_names:/home/pz10on/Work/ws01_plumbing/install/cpp04_param:/home/pz10on/Work/ws01_plumbing/install/cpp03_action:/home/pz10on/Work/ws01_plumbing/install/cpp02_service:/home/pz10on/Work/ws01_plumbing/install/cpp01_topic:/opt/ros/humble')]), 'shell': False}
[0.046926] (cpp07_exercise01) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target exer02_server\x1b[0m\n'}
[0.056234] (cpp07_exercise01) StdoutLine: {'line': b'[ 66%] Built target exer03_client\n'}
[0.056450] (cpp07_exercise01) StdoutLine: {'line': b'[ 66%] Built target exer01_pub_sub\n'}
[0.059701] (cpp07_exercise01) StdoutLine: {'line': b'[ 83%] \x1b[32mBuilding CXX object CMakeFiles/exer02_server.dir/src/exer02_server.cpp.o\x1b[0m\n'}
[0.099762] (-) TimerEvent: {}
[0.200087] (-) TimerEvent: {}
[0.300397] (-) TimerEvent: {}
[0.400676] (-) TimerEvent: {}
[0.501006] (-) TimerEvent: {}
[0.601318] (-) TimerEvent: {}
[0.701595] (-) TimerEvent: {}
[0.801883] (-) TimerEvent: {}
[0.902186] (-) TimerEvent: {}
[1.002492] (-) TimerEvent: {}
[1.102768] (-) TimerEvent: {}
[1.203055] (-) TimerEvent: {}
[1.303335] (-) TimerEvent: {}
[1.403607] (-) TimerEvent: {}
[1.503883] (-) TimerEvent: {}
[1.604177] (-) TimerEvent: {}
[1.704465] (-) TimerEvent: {}
[1.804743] (-) TimerEvent: {}
[1.868496] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[1.868683] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[1.868732] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/detail/distance__struct.hpp:8\x1b[m\x1b[K,\n'}
[1.868775] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/distance.hpp:7\x1b[m\x1b[K,\n'}
[1.868814] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:14\x1b[m\x1b[K:\n'}
[1.868854] (cpp07_exercise01) StderrLine: {'line': b'/usr/include/c++/11/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<void (Exe02Server::*)(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >), const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.868894] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:768:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, void (Exe02Server::*)(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >), const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.868932] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:789:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (Exe02Server::*)(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >); _BoundArgs = {const std::_Placeholder<1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.868974] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:29:43:\x1b[m\x1b[K   required from here\n'}
[1.869012] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[1.869051] (cpp07_exercise01) StderrLine: {'line': b'  755 |       static_assert(_Varargs::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K\n'}
[1.869088] (cpp07_exercise01) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K~~~~~\x1b[m\x1b[K\n'}
[1.869125] (cpp07_exercise01) StderrLine: {'line': b'  756 | \x1b[01;31m\x1b[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1\x1b[m\x1b[K\n'}
[1.869162] (cpp07_exercise01) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.869200] (cpp07_exercise01) StderrLine: {'line': b'  757 | \x1b[01;31m\x1b[K                    : sizeof...(_BoundArgs) == _Arity::value + 1\x1b[m\x1b[K,\n'}
[1.869237] (cpp07_exercise01) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.869275] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K(false ? (1 >= (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)) : (1 == (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)))\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[1.871968] (cpp07_exercise01) StderrLine: {'line': b'/usr/include/c++/11/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<void (Exe02Server::*)(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >), const std::_Placeholder<1>&, const std::_Placeholder<2>&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.872028] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:768:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, void (Exe02Server::*)(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >), const std::_Placeholder<1>&, const std::_Placeholder<2>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.872071] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:789:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (Exe02Server::*)(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >); _BoundArgs = {const std::_Placeholder<1>&, const std::_Placeholder<2>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.872117] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:33:39:\x1b[m\x1b[K   required from here\n'}
[1.872161] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[1.872202] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K(false ? (2 >= (((long unsigned int)std::integral_constant<long unsigned int, 2>::value) + 1)) : (2 == (((long unsigned int)std::integral_constant<long unsigned int, 2>::value) + 1)))\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[1.880334] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Exe02Server::distance_cb(base_interfaces_demo::srv::Distance_Request_<std::allocator<void> >::SharedPtr, base_interfaces_demo::srv::Distance_Response_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.880464] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:49:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kgoal_y\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\x07-Wunused-variable\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.880505] (cpp07_exercise01) StderrLine: {'line': b'   49 |         float \x1b[01;35m\x1b[Kgoal_y\x1b[m\x1b[K = req->y;\n'}
[1.880543] (cpp07_exercise01) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.904849] (-) TimerEvent: {}
[2.005119] (-) TimerEvent: {}
[2.101960] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[2.102171] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[2.102380] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.102493] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.102532] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.102578] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.102614] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.102650] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.102688] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.102729] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.102767] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.102804] (cpp07_exercise01) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = base_interfaces_demo::srv::Distance]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.102844] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = base_interfaces_demo::srv::Distance; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.102893] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = base_interfaces_demo::srv::Distance; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.102940] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:32:49:\x1b[m\x1b[K   required from here\n'}
[2.102980] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<base_interfaces_demo::srv::Distance>::SharedPtrCallback>(std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.103022] (cpp07_exercise01) StderrLine: {'line': b'   78 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[2.103058] (cpp07_exercise01) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.103095] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[2.103141] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.103180] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.103216] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.103253] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.103290] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.103329] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.103365] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.103402] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.103438] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.103475] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.103512] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1485:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Tp = _Tp; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.103560] (cpp07_exercise01) StderrLine: {'line': b' 1485 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[2.103598] (cpp07_exercise01) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.103634] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1485:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.103672] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[2.103708] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[2.103744] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[2.103780] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:60\x1b[m\x1b[K,\n'}
[2.103816] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/detail/distance__struct.hpp:8\x1b[m\x1b[K,\n'}
[2.103854] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/distance.hpp:7\x1b[m\x1b[K,\n'}
[2.103891] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:14\x1b[m\x1b[K:\n'}
[2.103928] (cpp07_exercise01) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.103969] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1485:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)> >::emplace<_Tp, _Args ...>(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; _Args = {std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.104033] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = base_interfaces_demo::srv::Distance]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.104093] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = base_interfaces_demo::srv::Distance; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.104153] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = base_interfaces_demo::srv::Distance; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.104196] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:32:49:\x1b[m\x1b[K   required from here\n'}
[2.104233] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2579:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.104273] (cpp07_exercise01) StderrLine: {'line': b' 2579 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[2.104310] (cpp07_exercise01) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.104349] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[2.104386] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.104423] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.104460] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.104507] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.104545] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.104582] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.104619] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.104656] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.104692] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.104729] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.104765] (cpp07_exercise01) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = base_interfaces_demo::srv::Distance]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.104805] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = base_interfaces_demo::srv::Distance; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.104853] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = base_interfaces_demo::srv::Distance; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.104894] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:32:49:\x1b[m\x1b[K   required from here\n'}
[2.104931] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1495:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Tp = _Tp; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.104976] (cpp07_exercise01) StderrLine: {'line': b' 1495 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[2.105013] (cpp07_exercise01) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.105050] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1495:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.105087] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[2.105123] (-) TimerEvent: {}
[2.105200] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[2.105246] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.105284] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.105322] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.105359] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.105396] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.105432] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.105475] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.105515] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.105565] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.105603] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Exe02Server::*(std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.105644] (cpp07_exercise01) StderrLine: {'line': b'   78 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[2.105684] (cpp07_exercise01) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.105722] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[2.105759] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.105795] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.105834] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.105871] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.105907] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.105943] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.105978] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.106014] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.106050] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.106086] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.106123] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1505:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.106170] (cpp07_exercise01) StderrLine: {'line': b' 1505 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[2.106206] (cpp07_exercise01) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.106242] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1505:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.106280] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[2.106316] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[2.106352] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.106389] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.106425] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.106461] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.106500] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.106536] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.106572] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.106616] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.106653] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.106690] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.106734] (cpp07_exercise01) StderrLine: {'line': b'   78 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[2.106773] (cpp07_exercise01) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.106810] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<base_interfaces_demo::srv::Distance>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[2.106851] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[2.106889] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.106925] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.106961] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.106996] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.107032] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.107068] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.107110] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.107150] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.107187] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.107223] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.107259] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1551:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.107308] (cpp07_exercise01) StderrLine: {'line': b' 1551 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[2.107346] (cpp07_exercise01) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.107383] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1551:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.107420] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[2.107456] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[2.107492] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.107529] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.107565] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.107601] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.107637] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.107678] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.107717] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.107753] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.107789] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.107825] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<typename std::variant_alternative<_Np, std::variant<_Types> >::type, std::initializer_list<_Up>&, _Args ...>, typename std::variant_alternative<_Np, std::variant<_Types> >::type&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Up = _Up; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<base_interfaces_demo::srv::Distance> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.107869] (cpp07_exercise01) StderrLine: {'line': b'   78 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[2.107908] (cpp07_exercise01) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.107944] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:78:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<base_interfaces_demo::srv::Distance>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<base_interfaces_demo::srv::Distance_Request_<std::allocator<void> > >, std::shared_ptr<base_interfaces_demo::srv::Distance_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[2.205243] (-) TimerEvent: {}
[2.209355] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.209540] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.209689] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.209790] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.209833] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.209871] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.209909] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.209945] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.209982] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.210019] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.210056] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:15\x1b[m\x1b[K:\n'}
[2.210093] (cpp07_exercise01) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; MessageT = turtlesim::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.210136] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = turtlesim::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210181] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = turtlesim::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210227] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210271] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210312] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:28:70:\x1b[m\x1b[K   required from here\n'}
[2.210352] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>::function(std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210391] (cpp07_exercise01) StderrLine: {'line': b'  391 |       set_deprecated(\x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K);\n'}
[2.210429] (cpp07_exercise01) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.210465] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[2.210502] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[2.210539] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[2.210576] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/detail/distance__struct.hpp:8\x1b[m\x1b[K,\n'}
[2.210614] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/distance.hpp:7\x1b[m\x1b[K,\n'}
[2.210652] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:14\x1b[m\x1b[K:\n'}
[2.210689] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210729] (cpp07_exercise01) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[2.210768] (cpp07_exercise01) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.210809] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.210849] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[2.210887] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[2.210924] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[2.210961] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:60\x1b[m\x1b[K,\n'}
[2.211000] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/detail/distance__struct.hpp:8\x1b[m\x1b[K,\n'}
[2.211039] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/distance.hpp:7\x1b[m\x1b[K,\n'}
[2.211076] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:14\x1b[m\x1b[K:\n'}
[2.211125] (cpp07_exercise01) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.211165] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>::_Callable<std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>&, std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>, std::__invoke_result<std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>&, std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > > > >; _Tp = void; _Res = void; _ArgTypes = {std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211209] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; MessageT = turtlesim::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211251] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = turtlesim::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211297] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = turtlesim::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211345] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211388] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211428] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:28:70:\x1b[m\x1b[K   required from here\n'}
[2.211467] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211506] (cpp07_exercise01) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[2.211544] (cpp07_exercise01) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.211583] (cpp07_exercise01) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[2.211621] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[2.211659] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[2.211707] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/detail/distance__struct.hpp:8\x1b[m\x1b[K,\n'}
[2.211761] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/install/base_interfaces_demo/include/base_interfaces_demo/base_interfaces_demo/srv/distance.hpp:7\x1b[m\x1b[K,\n'}
[2.211800] (cpp07_exercise01) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:14\x1b[m\x1b[K:\n'}
[2.211850] (cpp07_exercise01) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; MessageT = turtlesim::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.211900] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = turtlesim::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211947] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = turtlesim::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211993] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212040] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<turtlesim::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<turtlesim::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212087] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pz10on/Work/ws01_plumbing/src/cpp07_exercise01/src/exer02_server.cpp:28:70:\x1b[m\x1b[K   required from here\n'}
[2.212129] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212170] (cpp07_exercise01) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[2.212210] (cpp07_exercise01) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.212250] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212294] (cpp07_exercise01) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[2.212336] (cpp07_exercise01) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.212378] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212419] (cpp07_exercise01) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[2.212458] (cpp07_exercise01) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.212496] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212539] (cpp07_exercise01) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[2.212577] (cpp07_exercise01) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.212616] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212654] (cpp07_exercise01) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[2.212692] (cpp07_exercise01) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.212730] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Exe02Server::*(std::_Placeholder<1>))(std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212768] (cpp07_exercise01) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[2.212804] (cpp07_exercise01) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.212841] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::shared_ptr<turtlesim::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.212879] (cpp07_exercise01) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[2.212921] (cpp07_exercise01) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.212959] (cpp07_exercise01) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[2.305352] (-) TimerEvent: {}
[2.405639] (-) TimerEvent: {}
[2.505904] (-) TimerEvent: {}
[2.606168] (-) TimerEvent: {}
[2.706425] (-) TimerEvent: {}
[2.806694] (-) TimerEvent: {}
[2.906979] (-) TimerEvent: {}
[3.007247] (-) TimerEvent: {}
[3.107518] (-) TimerEvent: {}
[3.207806] (-) TimerEvent: {}
[3.308079] (-) TimerEvent: {}
[3.408411] (-) TimerEvent: {}
[3.508670] (-) TimerEvent: {}
[3.608932] (-) TimerEvent: {}
[3.709210] (-) TimerEvent: {}
[3.809466] (-) TimerEvent: {}
[3.824905] (cpp07_exercise01) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/exer02_server.dir/build.make:76: CMakeFiles/exer02_server.dir/src/exer02_server.cpp.o] Error 1\n'}
[3.825165] (cpp07_exercise01) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:167: CMakeFiles/exer02_server.dir/all] Error 2\n'}
[3.825325] (cpp07_exercise01) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[3.827196] (cpp07_exercise01) CommandEnded: {'returncode': 2}
[3.860502] (cpp07_exercise01) JobEnded: {'identifier': 'cpp07_exercise01', 'rc': 2}
[3.871148] (-) EventReactorShutdown: {}
